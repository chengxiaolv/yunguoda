* {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}
body {
    line-height: 1.5;
    font-size: .14rem;
    color: #333;
}
body,
dd,
dl,
dt,
form,
h1,
h2,
h3,
h4,
h5,
h6,
html,
li,
ol,
p,
select,
ul {
    margin: 0;
    padding: 0;
}
h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: normal;
    font-size: .14rem;
}
a {
    color: #333;
    text-decoration: none;
}
a,
img {
    border: 0;
    vertical-align: top;
}
:focus,
:active {
    outline: 0;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
input::-webkit-input-placeholder {
    color: #999;
}
button,
input,
textarea {
    padding: 0;
    resize: none;
    vertical-align: top;
    -webkit-appearance: none;
    -moz-appearance: none;
    -o-border-image: none;
    border-image: none;
    border-radius: 0;
}
button,
input[type=button],
input[type=reset],
input[type=submit] {
    cursor: pointer;
    -webkit-appearance: button;
}
table {
    border-collapse: collapse;
    border-spacing: 0;
}
td {
    vertical-align: top;
}
input[type="button"],
input[type="submit"],
input[type="reset"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    -o-appearance: none;
}
input:focus {
    border: .1rem solid #0E90D2;
}
ol,
ul {
    list-style: outside none none;
}
textarea {
    -webkit-appearance: none;
    -moz-appearance: none;
    -o-appearance: none;
}
select {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    -o-appearance: none;
}
.cl:after {
    display: block;
    clear: both;
    content: "";
    visibility: hidden;
    height: 0;
}
.fl {
    float: left;
}
.fr {
    float: right;
}
.text-c {
    text-align: center;
}
.text-l {
    text-align: left;
}
.text-r {
    text-align: right;
}
.mt-10 {
    margin-top: .1rem;
}
.mt-15 {
    margin-top: 15px !important;
}
.mt-20 {
    margin-top: 20px !important;
}
.mt-30 {
    margin-top: 30px !important;
}
.mt-60 {
    margin-top: 60px !important;
}
.ml-5 {
    margin-left: .05rem !important;
}
.ml-10 {
    margin-left: .1rem !important;
}
.mb-5 {
    margin-bottom: .05rem !important;
}
.mb-10 {
    margin-bottom: .1rem !important;
}
.mb-20 {
    margin-bottom: .2rem !important;
}
.pb-40 {
    padding-bottom: .4rem !important;
}
.fz-8 {
    font-size: .08rem;
}
.fz-10 {
    font-size: .1rem;
}
.fz-12 {
    font-size: .12rem;
}
.fz-14 {
    font-size: .14rem;
}
.fz-16 {
    font-size: .16rem;
}
.fz-20 {
    font-size: .2rem;
}
.c-666 {
    color: #666;
}
.c-444 {
    color: #444;
}
.c-333 {
    color: #2A2A2A;
}
.c-fff {
    color: #fff;
}
.c-yellow{
    color: #e84513;
}
.bg-yellow{
    background-color: #e84513;
}
.b {
    font-weight: 700;
}
.s {
    font-weight: 300;
}
.rela {
    position: relative;
}
.ab {
    position: absolute;
}
.center {
    left: 50%;
    transform: translateX(-50%);
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    -o-transform: translateX(-50%);
}
/*版心*/
.w {
    width: 1280px;
    /*font-family: '微软雅黑', 'sans-serif';*/
    font-family: 'Microsoft YaHei';
    margin: 0 auto;
}
/*模板结束*/

/*媒体查询*/

/*电脑*/
@media screen and (min-width: 640px) {
    html {

    }
}

/*# sourceMappingURL=data:application/json;base64, */